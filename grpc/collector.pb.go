// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: grpc/collector.proto

package grpc

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_collector_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_grpc_collector_proto_enumTypes[0]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_grpc_collector_proto_rawDescGZIP(), []int{2, 0}
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_collector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_collector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_grpc_collector_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type TrackPayloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E    string `protobuf:"bytes,1,opt,name=e,proto3" json:"e,omitempty"`
	Eid  string `protobuf:"bytes,2,opt,name=eid,proto3" json:"eid,omitempty"`
	Dtm  string `protobuf:"bytes,3,opt,name=dtm,proto3" json:"dtm,omitempty"`
	Stm  string `protobuf:"bytes,4,opt,name=stm,proto3" json:"stm,omitempty"`
	Ttm  string `protobuf:"bytes,5,opt,name=ttm,proto3" json:"ttm,omitempty"`
	Tv   string `protobuf:"bytes,6,opt,name=tv,proto3" json:"tv,omitempty"`
	Aid  string `protobuf:"bytes,7,opt,name=aid,proto3" json:"aid,omitempty"`
	Tna  string `protobuf:"bytes,8,opt,name=tna,proto3" json:"tna,omitempty"`
	P    string `protobuf:"bytes,9,opt,name=p,proto3" json:"p,omitempty"`
	Cx   string `protobuf:"bytes,10,opt,name=cx,proto3" json:"cx,omitempty"`
	UePx string `protobuf:"bytes,11,opt,name=ue_px,json=uePx,proto3" json:"ue_px,omitempty"`
	// subject class
	Uid   string `protobuf:"bytes,12,opt,name=uid,proto3" json:"uid,omitempty"`
	Ip    string `protobuf:"bytes,13,opt,name=ip,proto3" json:"ip,omitempty"`
	Ua    string `protobuf:"bytes,14,opt,name=ua,proto3" json:"ua,omitempty"`
	Res   string `protobuf:"bytes,15,opt,name=res,proto3" json:"res,omitempty"`
	Vp    string `protobuf:"bytes,16,opt,name=vp,proto3" json:"vp,omitempty"`
	Cd    string `protobuf:"bytes,17,opt,name=cd,proto3" json:"cd,omitempty"`
	Tz    string `protobuf:"bytes,18,opt,name=tz,proto3" json:"tz,omitempty"`
	Lang  string `protobuf:"bytes,19,opt,name=lang,proto3" json:"lang,omitempty"`
	Duid  string `protobuf:"bytes,20,opt,name=duid,proto3" json:"duid,omitempty"`
	Tnuid string `protobuf:"bytes,21,opt,name=tnuid,proto3" json:"tnuid,omitempty"`
	Co    string `protobuf:"bytes,22,opt,name=co,proto3" json:"co,omitempty"`
	UePr  string `protobuf:"bytes,23,opt,name=ue_pr,json=uePr,proto3" json:"ue_pr,omitempty"`
	// page view
	Url  string `protobuf:"bytes,24,opt,name=url,proto3" json:"url,omitempty"`
	Page string `protobuf:"bytes,25,opt,name=page,proto3" json:"page,omitempty"`
	Refr string `protobuf:"bytes,26,opt,name=refr,proto3" json:"refr,omitempty"`
	// structured event
	SeCa string `protobuf:"bytes,27,opt,name=se_ca,json=seCa,proto3" json:"se_ca,omitempty"`
	SeAc string `protobuf:"bytes,28,opt,name=se_ac,json=seAc,proto3" json:"se_ac,omitempty"`
	SeLa string `protobuf:"bytes,29,opt,name=se_la,json=seLa,proto3" json:"se_la,omitempty"`
	SePr string `protobuf:"bytes,30,opt,name=se_pr,json=sePr,proto3" json:"se_pr,omitempty"`
	SeVa string `protobuf:"bytes,31,opt,name=se_va,json=seVa,proto3" json:"se_va,omitempty"`
	// ecomm transaction
	TrId string `protobuf:"bytes,32,opt,name=tr_id,json=trId,proto3" json:"tr_id,omitempty"`
	TrTt string `protobuf:"bytes,33,opt,name=tr_tt,json=trTt,proto3" json:"tr_tt,omitempty"`
	TrAf string `protobuf:"bytes,34,opt,name=tr_af,json=trAf,proto3" json:"tr_af,omitempty"`
	TrTx string `protobuf:"bytes,35,opt,name=tr_tx,json=trTx,proto3" json:"tr_tx,omitempty"`
	TrSh string `protobuf:"bytes,36,opt,name=tr_sh,json=trSh,proto3" json:"tr_sh,omitempty"`
	TrCi string `protobuf:"bytes,37,opt,name=tr_ci,json=trCi,proto3" json:"tr_ci,omitempty"`
	TrSt string `protobuf:"bytes,38,opt,name=tr_st,json=trSt,proto3" json:"tr_st,omitempty"`
	TrCo string `protobuf:"bytes,39,opt,name=tr_co,json=trCo,proto3" json:"tr_co,omitempty"`
	TrCu string `protobuf:"bytes,40,opt,name=tr_cu,json=trCu,proto3" json:"tr_cu,omitempty"`
	// transaction item
	TiId string `protobuf:"bytes,41,opt,name=ti_id,json=tiId,proto3" json:"ti_id,omitempty"`
	TiSk string `protobuf:"bytes,42,opt,name=ti_sk,json=tiSk,proto3" json:"ti_sk,omitempty"`
	TiNm string `protobuf:"bytes,43,opt,name=ti_nm,json=tiNm,proto3" json:"ti_nm,omitempty"`
	TiCa string `protobuf:"bytes,44,opt,name=ti_ca,json=tiCa,proto3" json:"ti_ca,omitempty"`
	TiPr string `protobuf:"bytes,45,opt,name=ti_pr,json=tiPr,proto3" json:"ti_pr,omitempty"`
	TiQu string `protobuf:"bytes,46,opt,name=ti_qu,json=tiQu,proto3" json:"ti_qu,omitempty"`
	TiCu string `protobuf:"bytes,47,opt,name=ti_cu,json=tiCu,proto3" json:"ti_cu,omitempty"`
	// domain session
	Vid string `protobuf:"bytes,48,opt,name=vid,proto3" json:"vid,omitempty"`
	Sid string `protobuf:"bytes,49,opt,name=sid,proto3" json:"sid,omitempty"`
	// browser
	Cookie string `protobuf:"bytes,50,opt,name=cookie,proto3" json:"cookie,omitempty"`
	FPdf   string `protobuf:"bytes,51,opt,name=f_pdf,json=fPdf,proto3" json:"f_pdf,omitempty"`
	FQt    string `protobuf:"bytes,52,opt,name=f_qt,json=fQt,proto3" json:"f_qt,omitempty"`
	FRealp string `protobuf:"bytes,53,opt,name=f_realp,json=fRealp,proto3" json:"f_realp,omitempty"`
	FWma   string `protobuf:"bytes,54,opt,name=f_wma,json=fWma,proto3" json:"f_wma,omitempty"`
	FDir   string `protobuf:"bytes,55,opt,name=f_dir,json=fDir,proto3" json:"f_dir,omitempty"`
	FFla   string `protobuf:"bytes,56,opt,name=f_fla,json=fFla,proto3" json:"f_fla,omitempty"`
	FJava  string `protobuf:"bytes,57,opt,name=f_java,json=fJava,proto3" json:"f_java,omitempty"`
	FGears string `protobuf:"bytes,58,opt,name=f_gears,json=fGears,proto3" json:"f_gears,omitempty"`
	FAg    string `protobuf:"bytes,59,opt,name=f_ag,json=fAg,proto3" json:"f_ag,omitempty"`
	// document
	Ds string `protobuf:"bytes,60,opt,name=ds,proto3" json:"ds,omitempty"`
	Cs string `protobuf:"bytes,61,opt,name=cs,proto3" json:"cs,omitempty"`
	// mac
	Mac string `protobuf:"bytes,62,opt,name=mac,proto3" json:"mac,omitempty"`
	// page ping
	PpMix string `protobuf:"bytes,63,opt,name=pp_mix,json=ppMix,proto3" json:"pp_mix,omitempty"`
	PpMax string `protobuf:"bytes,64,opt,name=pp_max,json=ppMax,proto3" json:"pp_max,omitempty"`
	PpMiy string `protobuf:"bytes,65,opt,name=pp_miy,json=ppMiy,proto3" json:"pp_miy,omitempty"`
	PpMay string `protobuf:"bytes,66,opt,name=pp_may,json=ppMay,proto3" json:"pp_may,omitempty"`
	// advertising impressions
	AdBa  string `protobuf:"bytes,67,opt,name=ad_ba,json=adBa,proto3" json:"ad_ba,omitempty"`
	AdCa  string `protobuf:"bytes,68,opt,name=ad_ca,json=adCa,proto3" json:"ad_ca,omitempty"`
	AdAd  string `protobuf:"bytes,69,opt,name=ad_ad,json=adAd,proto3" json:"ad_ad,omitempty"`
	AdUid string `protobuf:"bytes,70,opt,name=ad_uid,json=adUid,proto3" json:"ad_uid,omitempty"`
	// social interactions
	Sa string `protobuf:"bytes,71,opt,name=sa,proto3" json:"sa,omitempty"`
	Sn string `protobuf:"bytes,72,opt,name=sn,proto3" json:"sn,omitempty"`
	St string `protobuf:"bytes,73,opt,name=st,proto3" json:"st,omitempty"`
	Sp string `protobuf:"bytes,74,opt,name=sp,proto3" json:"sp,omitempty"`
}

func (x *TrackPayloadRequest) Reset() {
	*x = TrackPayloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_collector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackPayloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPayloadRequest) ProtoMessage() {}

func (x *TrackPayloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_collector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPayloadRequest.ProtoReflect.Descriptor instead.
func (*TrackPayloadRequest) Descriptor() ([]byte, []int) {
	return file_grpc_collector_proto_rawDescGZIP(), []int{1}
}

func (x *TrackPayloadRequest) GetE() string {
	if x != nil {
		return x.E
	}
	return ""
}

func (x *TrackPayloadRequest) GetEid() string {
	if x != nil {
		return x.Eid
	}
	return ""
}

func (x *TrackPayloadRequest) GetDtm() string {
	if x != nil {
		return x.Dtm
	}
	return ""
}

func (x *TrackPayloadRequest) GetStm() string {
	if x != nil {
		return x.Stm
	}
	return ""
}

func (x *TrackPayloadRequest) GetTtm() string {
	if x != nil {
		return x.Ttm
	}
	return ""
}

func (x *TrackPayloadRequest) GetTv() string {
	if x != nil {
		return x.Tv
	}
	return ""
}

func (x *TrackPayloadRequest) GetAid() string {
	if x != nil {
		return x.Aid
	}
	return ""
}

func (x *TrackPayloadRequest) GetTna() string {
	if x != nil {
		return x.Tna
	}
	return ""
}

func (x *TrackPayloadRequest) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *TrackPayloadRequest) GetCx() string {
	if x != nil {
		return x.Cx
	}
	return ""
}

func (x *TrackPayloadRequest) GetUePx() string {
	if x != nil {
		return x.UePx
	}
	return ""
}

func (x *TrackPayloadRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TrackPayloadRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *TrackPayloadRequest) GetUa() string {
	if x != nil {
		return x.Ua
	}
	return ""
}

func (x *TrackPayloadRequest) GetRes() string {
	if x != nil {
		return x.Res
	}
	return ""
}

func (x *TrackPayloadRequest) GetVp() string {
	if x != nil {
		return x.Vp
	}
	return ""
}

func (x *TrackPayloadRequest) GetCd() string {
	if x != nil {
		return x.Cd
	}
	return ""
}

func (x *TrackPayloadRequest) GetTz() string {
	if x != nil {
		return x.Tz
	}
	return ""
}

func (x *TrackPayloadRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *TrackPayloadRequest) GetDuid() string {
	if x != nil {
		return x.Duid
	}
	return ""
}

func (x *TrackPayloadRequest) GetTnuid() string {
	if x != nil {
		return x.Tnuid
	}
	return ""
}

func (x *TrackPayloadRequest) GetCo() string {
	if x != nil {
		return x.Co
	}
	return ""
}

func (x *TrackPayloadRequest) GetUePr() string {
	if x != nil {
		return x.UePr
	}
	return ""
}

func (x *TrackPayloadRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TrackPayloadRequest) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *TrackPayloadRequest) GetRefr() string {
	if x != nil {
		return x.Refr
	}
	return ""
}

func (x *TrackPayloadRequest) GetSeCa() string {
	if x != nil {
		return x.SeCa
	}
	return ""
}

func (x *TrackPayloadRequest) GetSeAc() string {
	if x != nil {
		return x.SeAc
	}
	return ""
}

func (x *TrackPayloadRequest) GetSeLa() string {
	if x != nil {
		return x.SeLa
	}
	return ""
}

func (x *TrackPayloadRequest) GetSePr() string {
	if x != nil {
		return x.SePr
	}
	return ""
}

func (x *TrackPayloadRequest) GetSeVa() string {
	if x != nil {
		return x.SeVa
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrId() string {
	if x != nil {
		return x.TrId
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrTt() string {
	if x != nil {
		return x.TrTt
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrAf() string {
	if x != nil {
		return x.TrAf
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrTx() string {
	if x != nil {
		return x.TrTx
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrSh() string {
	if x != nil {
		return x.TrSh
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrCi() string {
	if x != nil {
		return x.TrCi
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrSt() string {
	if x != nil {
		return x.TrSt
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrCo() string {
	if x != nil {
		return x.TrCo
	}
	return ""
}

func (x *TrackPayloadRequest) GetTrCu() string {
	if x != nil {
		return x.TrCu
	}
	return ""
}

func (x *TrackPayloadRequest) GetTiId() string {
	if x != nil {
		return x.TiId
	}
	return ""
}

func (x *TrackPayloadRequest) GetTiSk() string {
	if x != nil {
		return x.TiSk
	}
	return ""
}

func (x *TrackPayloadRequest) GetTiNm() string {
	if x != nil {
		return x.TiNm
	}
	return ""
}

func (x *TrackPayloadRequest) GetTiCa() string {
	if x != nil {
		return x.TiCa
	}
	return ""
}

func (x *TrackPayloadRequest) GetTiPr() string {
	if x != nil {
		return x.TiPr
	}
	return ""
}

func (x *TrackPayloadRequest) GetTiQu() string {
	if x != nil {
		return x.TiQu
	}
	return ""
}

func (x *TrackPayloadRequest) GetTiCu() string {
	if x != nil {
		return x.TiCu
	}
	return ""
}

func (x *TrackPayloadRequest) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *TrackPayloadRequest) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *TrackPayloadRequest) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

func (x *TrackPayloadRequest) GetFPdf() string {
	if x != nil {
		return x.FPdf
	}
	return ""
}

func (x *TrackPayloadRequest) GetFQt() string {
	if x != nil {
		return x.FQt
	}
	return ""
}

func (x *TrackPayloadRequest) GetFRealp() string {
	if x != nil {
		return x.FRealp
	}
	return ""
}

func (x *TrackPayloadRequest) GetFWma() string {
	if x != nil {
		return x.FWma
	}
	return ""
}

func (x *TrackPayloadRequest) GetFDir() string {
	if x != nil {
		return x.FDir
	}
	return ""
}

func (x *TrackPayloadRequest) GetFFla() string {
	if x != nil {
		return x.FFla
	}
	return ""
}

func (x *TrackPayloadRequest) GetFJava() string {
	if x != nil {
		return x.FJava
	}
	return ""
}

func (x *TrackPayloadRequest) GetFGears() string {
	if x != nil {
		return x.FGears
	}
	return ""
}

func (x *TrackPayloadRequest) GetFAg() string {
	if x != nil {
		return x.FAg
	}
	return ""
}

func (x *TrackPayloadRequest) GetDs() string {
	if x != nil {
		return x.Ds
	}
	return ""
}

func (x *TrackPayloadRequest) GetCs() string {
	if x != nil {
		return x.Cs
	}
	return ""
}

func (x *TrackPayloadRequest) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *TrackPayloadRequest) GetPpMix() string {
	if x != nil {
		return x.PpMix
	}
	return ""
}

func (x *TrackPayloadRequest) GetPpMax() string {
	if x != nil {
		return x.PpMax
	}
	return ""
}

func (x *TrackPayloadRequest) GetPpMiy() string {
	if x != nil {
		return x.PpMiy
	}
	return ""
}

func (x *TrackPayloadRequest) GetPpMay() string {
	if x != nil {
		return x.PpMay
	}
	return ""
}

func (x *TrackPayloadRequest) GetAdBa() string {
	if x != nil {
		return x.AdBa
	}
	return ""
}

func (x *TrackPayloadRequest) GetAdCa() string {
	if x != nil {
		return x.AdCa
	}
	return ""
}

func (x *TrackPayloadRequest) GetAdAd() string {
	if x != nil {
		return x.AdAd
	}
	return ""
}

func (x *TrackPayloadRequest) GetAdUid() string {
	if x != nil {
		return x.AdUid
	}
	return ""
}

func (x *TrackPayloadRequest) GetSa() string {
	if x != nil {
		return x.Sa
	}
	return ""
}

func (x *TrackPayloadRequest) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *TrackPayloadRequest) GetSt() string {
	if x != nil {
		return x.St
	}
	return ""
}

func (x *TrackPayloadRequest) GetSp() string {
	if x != nil {
		return x.Sp
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=tracker.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_collector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_collector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_grpc_collector_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type TrackPayloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *TrackPayloadResponse) Reset() {
	*x = TrackPayloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_collector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackPayloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackPayloadResponse) ProtoMessage() {}

func (x *TrackPayloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_collector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackPayloadResponse.ProtoReflect.Descriptor instead.
func (*TrackPayloadResponse) Descriptor() ([]byte, []int) {
	return file_grpc_collector_proto_rawDescGZIP(), []int{3}
}

func (x *TrackPayloadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_grpc_collector_proto protoreflect.FileDescriptor

var file_grpc_collector_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x22,
	0x2e, 0x0a, 0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0xbf, 0x0b, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x74, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x74, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x74, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x74, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x76, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x6e, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x6e,
	0x61, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x63, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x78, 0x12,
	0x13, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x70, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x65, 0x50, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x61, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x75, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x70, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x7a, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x7a, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x75, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x75, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6e, 0x75, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6e, 0x75, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x6f, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x63, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x75, 0x65, 0x5f, 0x70, 0x72, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x65, 0x50, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x65, 0x66, 0x72, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x65, 0x5f, 0x63, 0x61, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x43, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x65,
	0x5f, 0x61, 0x63, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x41, 0x63, 0x12,
	0x13, 0x0a, 0x05, 0x73, 0x65, 0x5f, 0x6c, 0x61, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x65, 0x4c, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x50, 0x72, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x65, 0x5f,
	0x76, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x65, 0x56, 0x61, 0x12, 0x13,
	0x0a, 0x05, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x72, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x74, 0x74, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x54, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x61,
	0x66, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x41, 0x66, 0x12, 0x13, 0x0a,
	0x05, 0x74, 0x72, 0x5f, 0x74, 0x78, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72,
	0x54, 0x78, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x73, 0x68, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x72, 0x53, 0x68, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x63, 0x69,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x43, 0x69, 0x12, 0x13, 0x0a, 0x05,
	0x74, 0x72, 0x5f, 0x73, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x53,
	0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x63, 0x6f, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x72, 0x43, 0x6f, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x72, 0x5f, 0x63, 0x75, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x72, 0x43, 0x75, 0x12, 0x13, 0x0a, 0x05, 0x74,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x49, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x74, 0x69, 0x5f, 0x73, 0x6b, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x53, 0x6b, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x69, 0x5f, 0x6e, 0x6d, 0x18, 0x2b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x4e, 0x6d, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x69,
	0x5f, 0x63, 0x61, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x43, 0x61, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x69, 0x5f, 0x70, 0x72, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x69, 0x50, 0x72, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x69, 0x5f, 0x71, 0x75, 0x18, 0x2e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x51, 0x75, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x69, 0x5f,
	0x63, 0x75, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x43, 0x75, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x5f,
	0x70, 0x64, 0x66, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x50, 0x64, 0x66, 0x12,
	0x11, 0x0a, 0x04, 0x66, 0x5f, 0x71, 0x74, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66,
	0x51, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x70, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x52, 0x65, 0x61, 0x6c, 0x70, 0x12, 0x13, 0x0a, 0x05, 0x66,
	0x5f, 0x77, 0x6d, 0x61, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x57, 0x6d, 0x61,
	0x12, 0x13, 0x0a, 0x05, 0x66, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x44, 0x69, 0x72, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x5f, 0x66, 0x6c, 0x61, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x46, 0x6c, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x5f,
	0x6a, 0x61, 0x76, 0x61, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x4a, 0x61, 0x76,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x5f, 0x67, 0x65, 0x61, 0x72, 0x73, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x66, 0x47, 0x65, 0x61, 0x72, 0x73, 0x12, 0x11, 0x0a, 0x04, 0x66, 0x5f,
	0x61, 0x67, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x41, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x73, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x63, 0x73, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x63, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12,
	0x15, 0x0a, 0x06, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x78, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x70, 0x4d, 0x69, 0x78, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x70, 0x5f, 0x6d, 0x61, 0x78,
	0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x70, 0x4d, 0x61, 0x78, 0x12, 0x15, 0x0a,
	0x06, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x79, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x70, 0x4d, 0x69, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x70, 0x5f, 0x6d, 0x61, 0x79, 0x18, 0x42,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x70, 0x4d, 0x61, 0x79, 0x12, 0x13, 0x0a, 0x05, 0x61,
	0x64, 0x5f, 0x62, 0x61, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x42, 0x61,
	0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x43, 0x61, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x61, 0x64, 0x18, 0x45,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x41, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x64,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x46, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x61, 0x18, 0x47, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x48, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x74, 0x18, 0x49, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x70, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73,
	0x70, 0x22, 0x95, 0x01, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3a, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x30, 0x0a, 0x14, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0x84, 0x02, 0x0a, 0x10,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x1b, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1c, 0x2e, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x12, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x6b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x28, 0x01, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x70, 0x6c, 0x6f, 0x77, 0x2f, 0x73, 0x6e, 0x6f, 0x77, 0x70, 0x6c,
	0x6f, 0x77, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_collector_proto_rawDescOnce sync.Once
	file_grpc_collector_proto_rawDescData = file_grpc_collector_proto_rawDesc
)

func file_grpc_collector_proto_rawDescGZIP() []byte {
	file_grpc_collector_proto_rawDescOnce.Do(func() {
		file_grpc_collector_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_collector_proto_rawDescData)
	})
	return file_grpc_collector_proto_rawDescData
}

var file_grpc_collector_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_collector_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_grpc_collector_proto_goTypes = []interface{}{
	(HealthCheckResponse_ServingStatus)(0), // 0: tracker.HealthCheckResponse.ServingStatus
	(*HealthCheckRequest)(nil),             // 1: tracker.HealthCheckRequest
	(*TrackPayloadRequest)(nil),            // 2: tracker.TrackPayloadRequest
	(*HealthCheckResponse)(nil),            // 3: tracker.HealthCheckResponse
	(*TrackPayloadResponse)(nil),           // 4: tracker.TrackPayloadResponse
}
var file_grpc_collector_proto_depIdxs = []int32{
	0, // 0: tracker.HealthCheckResponse.status:type_name -> tracker.HealthCheckResponse.ServingStatus
	1, // 1: tracker.CollectorService.HealthCheck:input_type -> tracker.HealthCheckRequest
	2, // 2: tracker.CollectorService.TrackPayload:input_type -> tracker.TrackPayloadRequest
	2, // 3: tracker.CollectorService.StreamTrackPayload:input_type -> tracker.TrackPayloadRequest
	3, // 4: tracker.CollectorService.HealthCheck:output_type -> tracker.HealthCheckResponse
	4, // 5: tracker.CollectorService.TrackPayload:output_type -> tracker.TrackPayloadResponse
	4, // 6: tracker.CollectorService.StreamTrackPayload:output_type -> tracker.TrackPayloadResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_grpc_collector_proto_init() }
func file_grpc_collector_proto_init() {
	if File_grpc_collector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_collector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_collector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackPayloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_collector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_collector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackPayloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_collector_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_collector_proto_goTypes,
		DependencyIndexes: file_grpc_collector_proto_depIdxs,
		EnumInfos:         file_grpc_collector_proto_enumTypes,
		MessageInfos:      file_grpc_collector_proto_msgTypes,
	}.Build()
	File_grpc_collector_proto = out.File
	file_grpc_collector_proto_rawDesc = nil
	file_grpc_collector_proto_goTypes = nil
	file_grpc_collector_proto_depIdxs = nil
}
